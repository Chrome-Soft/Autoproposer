<?php

namespace Tests\Feature;

use App\ApiKey;
use App\Partner;
use App\ProposerItemType;
use App\Recommendation;
use Illuminate\Foundation\Testing\DatabaseMigrations;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Support\Facades\Cache;

class RecommendationTest extends TestCase
{
    use DatabaseMigrations, WithFaker;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->artisan('db:seed', ['--class' => 'ProposerItemTypeTableSeeder']);
    }

    /** @test */
    public function it_returns_by_segment()
    {
        Cache::shouldReceive('get')
            ->times(1)
            ->with('proposer_item_types')
            ->andReturn(ProposerItemType::all());

        $segment = create('Segment');

        $recommendations = create('Recommendation', 5, [
            'segment_id' => $segment->id
        ]);

        $result = Recommendation::getBySegment($segment, [1, 2], 2);

        $this->assertCount(2, $result);
        $this->assertEquals($result[0]->id, $recommendations[2]->id);
        $this->assertEquals($result[0]->type_key, 'product');

        $this->assertEquals($result[1]->id, $recommendations[3]->id);
        $this->assertEquals($result[1]->type_key, 'product');
    }
}
